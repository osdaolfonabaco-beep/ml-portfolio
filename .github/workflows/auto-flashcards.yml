name: Auto-Generate Flashcards from Code

on:
  push:
    paths:
      - 'foundations/python_advanced/**/*.py'
      - 'projects/**/*.py'
      - 'tools/auto_study_engine/**/*.py'
  workflow_dispatch:

jobs:
  generate-flashcards:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        echo "‚úÖ Dependencias de Python actualizadas"
        
    - name: Run flashcard generator with debug
      run: |
        echo "=== INICIANDO GENERACI√ìN DE FLASHCARDS ==="
        echo "Directorio de trabajo: $(pwd)"
        echo "=== ESTRUCTURA DEL PROYECTO ==="
        echo "Contenido del directorio ra√≠z:"
        ls -la
        echo "---"
        echo "Contenido de tools/auto_study_engine:"
        ls -la tools/auto_study_engine/
        echo "---"
        echo "Contenido de data/:"
        ls -la data/ || echo "‚ùå No existe carpeta data/"
        
        echo "=== EJECUTANDO GENERADOR ==="
        cd tools/auto_study_engine
        echo "Directorio actual: $(pwd)"
        
        # Ejecutar con logging detallado
        echo "Ejecutando: python3 test_quiz.py"
        if python3 test_quiz.py; then
            echo "‚úÖ test_quiz.py ejecutado exitosamente"
        else
            echo "‚ùå test_quiz.py fall√≥ con c√≥digo de error: $?"
            exit 1
        fi
        
        echo "=== VERIFICANDO RESULTADOS ==="
        echo "Buscando archivos JSON generados..."
        find ../.. -name "*.json" -type f | head -10
        
        if [ -f "../../data/mi_deck.json" ]; then
            echo "‚úÖ mi_deck.json generado exitosamente"
            echo "üìä Tama√±o: $(wc -c <../../data/mi_deck.json) bytes"
            echo "üìù Contenido:"
            head -n 3 ../../data/mi_deck.json
        else
            echo "‚ùå ERROR: mi_deck.json no se gener√≥"
            echo "üí• El script no cre√≥ el archivo esperado"
            echo "üìã Listando contenido de data/:"
            ls -la ../../data/ || echo "No existe carpeta data/"
            exit 1
        fi
        
    - name: Commit and push generated flashcards
      if: success()
      run: |
        echo "=== INICIANDO COMMIT ==="
        echo "Verificando existencia de mi_deck.json..."
        
        if [ -f "data/mi_deck.json" ] && [ -s "data/mi_deck.json" ]; then
            echo "‚úÖ Archivo encontrado y con contenido"
            echo "ÔøΩÔøΩ Tama√±o: $(wc -c <data/mi_deck.json) bytes"
            
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add data/mi_deck.json
            
            # Verificar cambios reales
            if git diff --staged --quiet; then
                echo "‚ö† No hay cambios reales en las flashcards"
            else
                git commit -m "chore: auto-generate flashcards from code [skip ci]"
                git push
                echo "‚úÖ Commit y push completados"
            fi
        else
            echo "‚ùå ERROR: No se puede commitar - archivo no existe o est√° vac√≠o"
            echo "üìã Listando data/:"
            ls -la data/ || echo "No existe carpeta data/"
            exit 1
        fi
